apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  name: memcached-operator.v0.0.1
  namespace: placeholder
  annotations:
    alm-examples: [{"apiVersion":"cache.example.com/v1alpha1","kind":"Memcached","metadata":{"name":"example-memcached"},"spec":{"size":3}}]
    categories: Logging & Tracing
    certified: 'false'
    createdAt: ''
    description: 'memcached-operator '
    containerImage: ''
    support: ''
    capabilities: Seamless Upgrades
    repository: ''
spec:
  displayName: memcached-operator
  description: >
    ## About the managed application

    It is memcached-operator,it will able to manage the any different kind of
    pods

    ## About this Operator

    This operator will helps to run flask application instance 

    ## Prerequisites for enabling this Operator

    kubenetes latest version

    marketplace

    olm
  maturity: alpha
  version: 0.0.1
  replaces: ''
  minKubeVersion: ''
  keywords:
    - memcached
  maintainers:
    - name: Dineshcherry
      email: Dineshcherry@gmail.com
  provider:
    name: Dineshcherry
  labels: {}
  selector:
    matchLabels: {}
  links:
    - name: Dinechcherry
      url: 'https://github.com/janepelladinesh/memcached-operators'
  
  customresourcedefinitions:
    owned:
      - name: memcacheds.cache.example.com
        displayName: memcached-operator
        kind: Memcached
        version: v1alpha1
        description: 'This crd provides the  versions ,kind '
        resources:
          - version: v1
            kind: ServiceAccount
          - version: v1
            kind: Role
          - version: v1
            kind: RoleBinding
          - version: v1
            kind: Deployment
        specDescriptors: []
        statusDescriptors: []
    required: []
  install:
    strategy: deployment
    spec:
      permissions:
        - serviceAccountName: memcached-operator
      clusterPermissions: []
      deployments:
        - name: memcached-operator
          spec:
            replicas: 1
            selector:
              matchLabels:
                k8s-app: memcached-operator
            template:
              metadata:
                labels:
                  k8s-app: memcached-operator
              spec:
                containers:
                  image: 'quay.io/example/example-operator:v0.0.1'
                  imagePullPolicy: Always
                  name: memcached-operator
                  resources:
                    limits:
                      cpu: 200m
                      memory: 100Mi
                    requests:
                      cpu: 100m
                      memory: 50Mi
                  env:
                    - name: WATCH_NAMESPACE
                      valueFrom:
                        fieldRef:
                          fieldPath: 'metadata.annotations[''olm.targetNamespaces'']'
                    - name: POD_NAME
                      valueFrom:
                        fieldRef:
                          fieldPath: metadata.name
                    - name: OPERATOR_NAME
                      value: memcached-operator
                imagePullSecrets:
                  - name: ''
                nodeSelector:
                  beta.kubernetes.io/os: linux
                serviceAccountName: memcached-operator
  installModes:
    - type: OwnNamespace
      supported: true
    - type: SingleNamespace
      supported: true
    - type: MultiNamespace
      supported: false
    - type: AllNamespaces
      supported: false
